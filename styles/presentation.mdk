Description: 
    Include this file to create slide shows using [Reveal.js] for HTML and
    the [Beamer] package for LaTeX.
    * Slides are started on a level 1 `#` or 2 `##` header.
      You can also a `~ Slide` custom block.
    * Use the `.fragment` class to create overlays that appear one by one.
    * Use the `.fragmented` class on a list to have each item appear in order.
    * Use a `~ Notes` custom block for speaker notes (only for HTML for now).
    * Use a `~ Vertical` custom block to create a set of vertical slides (only for HTML).
    \
    Notes for Reveal.js:
    * It expects the reveal.js library to be in a subdirectory "reveal.js".
      You can use another url by setting the `Reveal Url` metadata key.
    * Select another default theme by setting the `Reveal Theme`, like `sky` for example.
    * The "revealConfig" variable contains the default configuration options
        and can be extended inside `<script>` tags.
    \
    Notes for the beamer package:
    * Set the `Beamer Theme` metadata key to select anther theme.
    * Set the `Beamer Theme Options` for different options for the theme.
    * Use the `.pause` class to insert pauses.
    \
    [Reveal.js]: http://lab.hakim.se/reveal-js/#/
    [Beamer]: http://en.wikibooks.org/wiki/LaTeX/Presentations
Reveal Url    : https://cdn.jsdelivr.net/reveal.js/2.6.2        
Reveal Theme  : default
Beamer Theme  : default
Beamer Theme Options: 
Document Class: [xcolor=table]beamer
Css           : &reveal-url;/css/reveal.min.css
Css           : &reveal-url;/css/theme/&reveal-theme;.css
Script        : &reveal-url;/lib/js/head.min.js { .preview }
Script        : &reveal-url;/js/reveal.js { .preview }
Heading Depth : 0
Toc Depth     : 2
Section Base  : 2
Section Depth : 2
.MadokoLogo   : font-size=50%
~Notes        : html-elem=aside .notes
.Author       : font-size=xx-large
.Affiliation  : font-size=x-large
.Email        : font-size=x-large
~Body         : before="~ Begin Reveal {line-adjust=0}&nl;~ Begin Slides {line-adjust=0}&nl;"
                after="~ End Slides&nl;~ End Reveal&nl;" 
~Slide        : .section html-elem=section tex-elem=mdSection
~Vertical     : .section html-elem=section
@tex ~Notes   : display=none
@tex ~Vertical: notag
Tex Header*   :
    \ifbeamer\usetheme[&beamer-theme-options;]{&beamer-theme;}\fi
Html Header   :         
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <link rel="stylesheet" href="&reveal-url;/css/theme/&reveal-theme;.css" id="theme">    
    <!--[if lt IE 9]>
    <script src="&reveal-url;/lib/js/html5shiv.js"></script>
    <![endif]-->
    <style>
    body.madoko {
      margin: 0pt;
      padding: 0pt;      
    }   
    .reveal .authorblock .author {
        font-size: 120%;
        margin-bottom: 1ex;
    }
    .reveal p { 
        text-align: center; 
    }    
    .reveal table {
        margin-left: auto;
        margin-right: auto;
    }
    .reveal li p {
        text-align: left;
    }
    .reveal h2 {
        margin-bottom: 0.7em;
    }
    .reveal section img.math-display {
        padding: 1em;
        box-shadow: none;
        border: none;
    }
    .reveal section img.math-inline {
        margin: 0pt;
        padding: 0pt;
        background-color: none;
        box-shadow: none;
        border: none;
    }
    .reveal section img {
        box-shadow: none;
        border: none;
    }
    .madoko .reveal pre {
        border: 1px solid black;
        word-wrap: normal;
        background-color: white;
        font-size: 0.7em;
        padding: 0.7em;
        line-height: 100%;
        width: 100%;
    }      
    .reveal pre code, .reveal code {
        padding: 0pt;
    }
    .reveal .tocitem {
        text-align: left;
    }
    .reveal .toc>.tocblock .tocblock {
        margin-left: 0.5em;
    }   
    .reveal .toc>.tocblock .tocblock .tocblock {
        margin-left: 1em;
    }
    .reveal .bibliography {
      height: 15em;
      overflow-y: auto;
      font-size: 0.8em;
    }
    /* Display in the preview window */
    html, body.madoko.preview, .preview body {
      height  : 100% !important;
      width   : auto!important;
      padding : 0pt !important;
      overflow: hidden !important;
    }            
    body.preview .reveal .slides .fragment {
      visibility: visible;
      opacity: 0.5;
    }
    body.preview .reveal .slides .fragment.visible {
      opacity: 1.0;
    }
    body.preview[data-view=full] .reveal .slides .fragment {
      visibility: hidden;
    }    
    body.preview[data-view=full] .reveal .slides .fragment.visible {
      visibility: visible;
    }    
    /* 'static' display in the preview window, unused for now */
    body.preview.static div.reveal, 
    body.preview.static div.ticreveal .slides, 
    body.preview.static div.reveal section {
      display: block !important;
      position: relative !important;
      width: auto !important;      
    }
    body.preview.static div.reveal section {
      border: solid 1px black;
      padding: 1em !important;
      margin-top: 1em;
      min-height: 15em;
      top: 0pt;
    }
    body.madoko.preview.static section {
      font-size: 75%;
    }
    body.madoko.preview.static {
      padding: 0em 1em 0em 1em !important;
    }
    body.madoko.preview.static .reveal pre {
      width: 95%;
    }    
    </style>
    <script>    
    // Full list of configuration options available here:
    // https://github.com/hakimel/reveal.js#configuration
    var revealConfig = {
        controls: true,
        progress: true,
        history: false,
        center: true,
    };
    document.addEventListener("DOMContentLoaded", function(event) {
        if (typeof Reveal !== "undefined" && !Reveal.isReady()) {
          [].forEach.call(document.querySelectorAll( ".fragmented>li" ), function(li) {
            if (li && !/\bfragment\b/.test(li.className)) li.className = li.className + " fragment";
          });
          Reveal.initialize(revealConfig);
          console.log("Reveal intialized.");
       }
    });
    </script>