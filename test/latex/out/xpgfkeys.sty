%---------------------------------------------------------------------------
%  Copyright 2013 Microsoft Corporation.
% 
%  This is free software; you can redistribute it and/or modify it under the
%  terms of the Apache License, Version 2.0. A copy of the License can be
%  found in the file "license.txt" at the root of this distribution.
%---------------------------------------------------------------------------
\NeedsTeXFormat{LaTeX2e}[1995/12/01]

\RequirePackage{etoolbox}
\RequirePackage{xcolor}
\RequirePackage{pgfkeys}
\RequirePackage{enumitem}

% --------------------------------------------------------
% Extensions to etoolbox
% --------------------------------------------------------

\providerobustcmd*\@swaparg[2]{#2{#1}}
\providerobustcmd*\expandnext[2]{\expandafter\@swaparg\expandafter{#2}{#1}}

\providecommand\eifstrequal[1]{%
  \expandnext\ifstrequal{#1}%
}

\providecommand\eifblank[1]{%
  \expandnext\ifblank{#1}%
}

\providecommand\ontoggle[2]{%
  \iftoggle{#1}{#2}{}%
}

\providecommand\providelength[1]{% 
  \ifdef{#1}{}{\newlength#1}%
}

\providecommand\csnewlength[1]{%
  \expandafter\newlength\csname #1\endcsname%
}
\providecommand\csprovidelength[1]{%
  \ifcsdef{#1}{}{\expandafter\newlength\csname #1\endcsname}%
}
\providecommand\cssetlength[2]{%
  \expandafter\setlength\csname #1\endcsname{#2}%
}

% --------------------------------------------------------
%  get the pgf key prefix (=pgfk@)
% --------------------------------------------------------
\edef\pgfprefix{\expandafter\expandafter\expandafter\string\pgfkeysvalueof{}}
\edef\pgfprefix{\expandafter\@gobble\pgfprefix}%


% --------------------------------------------------------
% Basic commands in terms of values
% --------------------------------------------------------

\newcommand*\valueof{}
\let\valueof\pgfkeysvalueof
\newrobustcmd*\letvalue[2]{\pgfkeysgetvalue{#2}#1}%
\newrobustcmd*\edefvalue[2]{\valuelet#1{#2}\protected@edef#1{#1}}

\newcommand*\valueset{}
\let\valueset\pgfkeyssetvalue
\newrobustcmd*\valuesete[2]{\expandnext{\valueset{#1}}{#2}}
\newrobustcmd*\valuesetx[2]{\protected@edef\xpk@temp{#2}\valuesete{#1}{\xpk@temp}}
\newrobustcmd*\valueappend[2]{\csappto{\pgfprefix#1}{#2}}
\newrobustcmd*\valueappendx[2]{\ecsappto{\pgfprefix#1}{#2}}

\providecommand\ifvalueblank[1]{%
  \valueletx\xpk@temp{#1}%
  \expandafter\ifblank\expandafter{\xpk@temp}%
}
\providecommand\ifvalueequal[1]{%
  \valueletx\xpk@temp{#1}%
  \expandafter\ifstrequal\expandafter{\xpk@temp}%
}

% short hands
\let\valuepath\pgfkeyscurrentpath
\let\setvalues\pgfkeys
\let\defvalues\pgfkeys
\let\valuesalso\pgfkeysalso


% test if a key is not defined, or blank
\providecommand\ifvaluevoid[1]{%
  \ifcsvoid{\pgfprefix#1}%
}

% test if a key is a macro with a parameter
\providecommand\ifvaluecmd[1]{%
  \ifcsparam{\pgfprefix#1}%
}

\newcommand*\ifvaluedefined{}
\let\ifvaluedefined\pgfkeysifdefined



% --------------------------------------------------------
% Comma seperated values
% --------------------------------------------------------

\newrobustcmd*\headof[1]{\xpk@headof#1,\relax}%
\def\xpk@headof#1,#2\relax{#1}%

\providerobustcmd*\ifanyof[2]{%
  \let\do@next\@secondoftwo
  \edef\xpk@temp{#1}%
  \def\do##1{\eifstrequal{\xpk@temp}{##1}{\let\do@next\@firstoftwo\listbreak}{}}%
  \expandnext\docsvlist{#2}%
  \do@next
}

\providerobustcmd*\ifvalueanyof[2]{%
  \ifanyof{\valueof{#1}}{#2}%
}

% --------------------------------------------------------
% List values
% --------------------------------------------------------

\newrobustcmd*\valuesetnil[1]{\valueset{#1}{}}
\newrobustcmd*\valuepush[2]{\listcsadd{\pgfprefix#1}{#2}}
\newrobustcmd*\valuepushx[2]{\listcseadd{\pgfprefix#1}{#2}}%
\newrobustcmd*\valueforeachdo[2]{\def\xpk@@do##1{#2}\forlistcsloop{\xpk@@do}{\pgfprefix#1}}

\newrobustcmd*\valuesetlist[2]{%
  \valuesetnil{#1}\valueconcat{#1}{#2}%
}
\newrobustcmd*\valueconcat[2]{%
  \def\do##1{\valuepushx{#1}{##1}}%
  \expandnext\docsvlist{#2}%
}
\newrobustcmd*\valueletlist[2]{%
  \def#1{}%
  \valueforeachdo{#2}{%
    \ifdefempty#1%
      {\def#1{##1}}%
      {\appto#1{,##1}}%
  }%
}
\newrobustcmd*\ifvaluecontains[2]{%
  \xifinlistcs{#2}{\pgfprefix#1}%
}

\let\ifvaluenil\ifvaluevoid



% --------------------------------------------------------
% Register keys in metadata so they can be displayed
% --------------------------------------------------------

\newrobustcmd*\xpk@registerkey[1][\pgfkeyscurrentpath]{%
  \edef\valuepath{#1}%
  \edef\pgfkeyscurrentkey{#1}%
  \xpk@registerkey@{/.@names}%
}
\newrobustcmd*\xpk@registerkey@[1]{%
  \eifblank{\pgfkeyscurrentkey}{}{%
    \pgfkeys@split@path
    \edef\xpk@tempname{/@meta/keys\pgfkeyscurrentpath}%
    \ifvaluedefined{\xpk@tempname/.@names}{}{%
      \valuesetnil{\xpk@tempname/.@names}%
      \valuesetnil{\xpk@tempname/.@paths}%
    }%
    \ifvaluecontains{\xpk@tempname#1}{\pgfkeyscurrentname}%
      {}{\valuepushx{\xpk@tempname#1}{\pgfkeyscurrentname}}%
    \valueletlist\xpk@list{\xpk@tempname#1}%
    \typeout{new list: \xpk@list, added \pgfkeyscurrentname}%
    \edef\pgfkeyscurrentkey{\pgfkeyscurrentpath}%
    \xpk@registerkey@{/.@paths}%
  }%
}



% --------------------------------------------------------
% Show definitions
% --------------------------------------------------------

\newrobustcmd*\showvalues{%
  \showvaluesinpath{}%
}

\newrobustcmd*\showvaluesinpath[1]{%
  \xpk@showpath{}{#1}%
}

\newrobustcmd*\xpk@showpath[2]{%  
  \noindent\xpk@fontpath{#2/}%
  \xpk@showitems{#1#2}{/.@names}{\xpk@showname}%
  \xpk@showitems{#1#2}{/.@paths}{\xpk@showpath}%
}

\newrobustcmd*\xpk@showitems[4][]{%
  \ifvaluenil{/@meta/keys#2#3}{}{%
    \begin{itemize}[noitemsep,topsep=0pt,leftmargin=1em,label=,#1]
    \valueforeachdo{/@meta/keys#2#3}{%
      \item\noindent#4{#2/}{##1}%
    }%
    \end{itemize}
  }%
}

\newrobustcmd*\xpk@showname[2]{%
  \xpk@fontname{#2}%
  =\valueshow{#1#2}%
  \ifvaluedefined{#1#2/.@initial}{%
    , initial=\valueshowliteral{#1#2/.@initial}%
  }{}%
  \ifvaluedefined{#1#2/.@def}{%
    , default=\valueshowliteral{#1#2/.@def}%
  }{}%
}

\newrobustcmd*\valueshowliteral[1]{%
  \valuelet\xpk@temp{#1}\texttt{\expandnext\detokenize{\xpk@temp}}%
}

\newrobustcmd*\valueshow[1]{%
  \ifvaluedefined{#1/.@show}%
    {\xpk@fontvalue{\valueof{#1/.@show}{#1}}}%
    {\ifvaluecmd{#1}%
      {\xpk@fontspecial{cmd}}%
      {\xpk@fontvalue{\valueof{#1}}}}%
}

\newrobustcmd*\xpk@fontname[1]{\textsf{#1}}
\newrobustcmd*\xpk@fontpath[1]{\textsf{#1}}
\newrobustcmd*\xpk@fontvalue[1]{\textsf{#1}}
\newrobustcmd*\xpk@fontspecial[1]{\textit{#1}}


% --------------------------------------------------------
% 
% --------------------------------------------------------

\newrobustcmd*\xpk@initdefault{\@ifnextchar[{\xpk@initdefault@def}{\xpk@initdefault@init}}
\def\xpk@initdefault@def[#1]{%
  \valuesalso{\pgfkeyscurrentpath/.default=#1}%
  \xpk@initdefault@init
}
\def\xpk@initdefault@init#1\relax{%
  \valueset{\pgfkeyscurrentpath/.@initial}{#1}%
  \ifvaluedefined{\pgfkeyscurrentpath/.@cmd}%
    {\valuesalso{\pgfkeyscurrentpath={#1}}}%
    {\valueset{\pgfkeyscurrentpath}{#1}}%
}



% --------------------------------------------------------
% 
% --------------------------------------------------------

\pgfkeysdef{/handlers/.set show}{%
  \def\xpk@show##1{#1}%
  \pgfkeyslet{\pgfkeyscurrentpath/.@show}\xpk@show%
}

\pgfkeysdef{/handlers/.init}{%
  \xpk@initdefault#1\relax%
}

\defvalues{/handlers/.new value/.code=%
  \xpk@registerkey%
  \valuesalso{%
    \valuepath/.init=#1,%
  }
}

\defvalues{/handlers/.new length/.code=%
  \xpk@registerkey%
  \edef\xpk@length{length@\valuepath}%
  \csnewlength{\xpk@length}%
  \valuesetx{\valuepath}{\csuse{\xpk@length}}%
  \valuesalso{%
    \valuepath/.ecode=\noexpand\cssetlength{\xpk@length}{\noexpand\dimexpr##1\noexpand\relax},%
    \valuepath/.init=#1,
    \valuepath/.set show=\the\valueof{##1}%
  }%
}

\defvalues{/handlers/.new dimen/.code=%
  \xpk@registerkey%
  \edef\xpk@dimen{\valuepath/.@dimen}%
  \valuesetx{\valuepath}{\noexpand\dimexpr\noexpand\valueof{\xpk@dimen}\noexpand\relax}%
  \valuesalso{%
    \valuepath/.ecode=\noexpand\valueset{\xpk@dimen}{##1}\noexpand,%
    \valuepath/.init=#1,
    \valuepath/.set show=\the\valueof{##1} (=\valueshowliteral{##1/.@dimen}),%
  }%
}

